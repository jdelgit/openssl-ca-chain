# https://www.openssl.org/docs/man1.1.1/man5/x509v3_config.html
[ ca ]
# `man ca`
default_ca = CA_default

[ CA_default ]
dir               = ../intermediate/$ENV::ISSUER_COMMONNAME
certs             = $dir/certs
crl_dir           = $dir/crl
new_certs_dir     = $dir/newcerts
database          = $dir/db/${ENV::ISSUER_COMMONNAME}_DB.txt
serial            = $dir/serial
RANDFILE          = $dir/private/.rand
private_key       = $dir/private/$ENV::ISSUER_COMMONNAME.key
certificate       = $dir/certs/$ENV::ISSUER_COMMONNAME.crt
crl               = $dir/crl/$ENV::ISSUER_COMMONNAME.crl
policy            = policy_loose
crl_extensions    = crl_ext
default_crl_days  = 30
default_md        = sha256
name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = match
stateOrProvinceName     = match
localityName            = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional



[ req ]
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only
default_md          = sha256
x509_extensions     = v3_intermediate_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = countryName
stateOrProvinceName             = stateOrProvinceName
localityName                    = localityName
0.organizationName              = organizationName
organizationalUnitName          = organizationalUnitName
commonName                      = commonName
emailAddress                    = emailAddress

# Optionally, specify some defaults.
countryName_default             = US
stateOrProvinceName_default     = New York
localityName_default            = New York
0.organizationName_default      = Home Ltd
organizationalUnitName_default  = HQ
commonName_default              =


[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:1
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection
subjectAltName = ${ENV::SUBJECT_SAN}

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = ${ENV::SUBJECT_SAN}
